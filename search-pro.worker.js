const nt="ENTRIES",V="KEYS",T="VALUES",F="";class D{set;_type;_path;constructor(t,s){const n=t._tree,o=Array.from(n.keys());this.set=t,this._type=s,this._path=o.length>0?[{node:n,keys:o}]:[]}next(){const t=this.dive();return this.backtrack(),t}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:t,keys:s}=E(this._path);if(E(s)===F)return{done:!1,value:this.result()};const n=t.get(E(s));return this._path.push({node:n,keys:Array.from(n.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const t=E(this._path).keys;t.pop(),!(t.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:t})=>E(t)).filter(t=>t!==F).join("")}value(){return E(this._path).node.get(F)}result(){switch(this._type){case T:return this.value();case V:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}}const E=e=>e[e.length-1],ot=(e,t,s)=>{const n=new Map;if(t===void 0)return n;const o=t.length+1,u=o+s,i=new Uint8Array(u*o).fill(s+1);for(let r=0;r<o;++r)i[r]=r;for(let r=1;r<u;++r)i[r*o]=r;return R(e,t,s,n,i,1,o,""),n},R=(e,t,s,n,o,u,i,r)=>{const d=u*i;t:for(const l of e.keys())if(l===F){const a=o[d-1];a<=s&&n.set(r,[e.get(l),a])}else{let a=u;for(let h=0;h<l.length;++h,++a){const m=l[h],p=i*a,f=p-i;let c=o[p];const g=Math.max(0,a-s-1),_=Math.min(i-1,a+s);for(let y=g;y<_;++y){const b=m!==t[y],z=o[f+y]+ +b,A=o[f+y+1]+1,w=o[p+y]+1,L=o[p+y+1]=Math.min(z,A,w);L<c&&(c=L)}if(c>s)continue t}R(e.get(l),t,s,n,o,a,i,r+l)}};class C{_tree;_prefix;_size=void 0;constructor(t=new Map,s=""){this._tree=t,this._prefix=s}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[s,n]=x(this._tree,t.slice(this._prefix.length));if(s===void 0){const[o,u]=O(n);for(const i of o.keys())if(i!==F&&i.startsWith(u)){const r=new Map;return r.set(i.slice(u.length),o.get(i)),new C(r,t)}}return new C(s,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,ut(this._tree,t)}entries(){return new D(this,nt)}forEach(t){for(const[s,n]of this)t(s,n,this)}fuzzyGet(t,s){return ot(this._tree,t,s)}get(t){const s=I(this._tree,t);return s!==void 0?s.get(F):void 0}has(t){const s=I(this._tree,t);return s!==void 0&&s.has(F)}keys(){return new D(this,V)}set(t,s){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,M(this._tree,t).set(F,s),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=M(this._tree,t);return n.set(F,s(n.get(F))),this}fetch(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=M(this._tree,t);let o=n.get(F);return o===void 0&&n.set(F,o=s()),o}values(){return new D(this,T)}[Symbol.iterator](){return this.entries()}static from(t){const s=new C;for(const[n,o]of t)s.set(n,o);return s}static fromObject(t){return C.from(Object.entries(t))}}const x=(e,t,s=[])=>{if(t.length===0||e==null)return[e,s];for(const n of e.keys())if(n!==F&&t.startsWith(n))return s.push([e,n]),x(e.get(n),t.slice(n.length),s);return s.push([e,t]),x(void 0,"",s)},I=(e,t)=>{if(t.length===0||e==null)return e;for(const s of e.keys())if(s!==F&&t.startsWith(s))return I(e.get(s),t.slice(s.length))},M=(e,t)=>{const s=t.length;t:for(let n=0;e&&n<s;){for(const u of e.keys())if(u!==F&&t[n]===u[0]){const i=Math.min(s-n,u.length);let r=1;for(;r<i&&t[n+r]===u[r];)++r;const d=e.get(u);if(r===u.length)e=d;else{const l=new Map;l.set(u.slice(r),d),e.set(t.slice(n,n+r),l),e.delete(u),e=l}n+=r;continue t}const o=new Map;return e.set(t.slice(n),o),o}return e},ut=(e,t)=>{const[s,n]=x(e,t);if(s!==void 0){if(s.delete(F),s.size===0)W(n);else if(s.size===1){const[o,u]=s.entries().next().value;$(n,o,u)}}},W=e=>{if(e.length===0)return;const[t,s]=O(e);if(t.delete(s),t.size===0)W(e.slice(0,-1));else if(t.size===1){const[n,o]=t.entries().next().value;n!==F&&$(e.slice(0,-1),n,o)}},$=(e,t,s)=>{if(e.length===0)return;const[n,o]=O(e);n.set(o+t,s),n.delete(o)},O=e=>e[e.length-1],it=(e,t)=>{const s=e._idToShortId.get(t);if(s!=null)return e._storedFields.get(s)},rt=/[\n\r -#%-*,-/:;?@[-\]_{}\u00A0\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u1680\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2000-\u200A\u2010-\u2029\u202F-\u2043\u2045-\u2051\u2053-\u205F\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u3000-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]+/u,S="or",q="and",ct="and_not",lt=(e,t)=>{e.includes(t)||e.push(t)},P=(e,t)=>{for(const s of t)e.includes(s)||e.push(s)},G=({score:e},{score:t})=>t-e,ht=()=>new Map,k=e=>{const t=new Map;for(const s of Object.keys(e))t.set(parseInt(s,10),e[s]);return t},N=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,dt={[S]:(e,t)=>{for(const s of t.keys()){const n=e.get(s);if(n==null)e.set(s,t.get(s));else{const{score:o,terms:u,match:i}=t.get(s);n.score=n.score+o,n.match=Object.assign(n.match,i),P(n.terms,u)}}return e},[q]:(e,t)=>{const s=new Map;for(const n of t.keys()){const o=e.get(n);if(o==null)continue;const{score:u,terms:i,match:r}=t.get(n);P(o.terms,i),s.set(n,{score:o.score+u,terms:o.terms,match:Object.assign(o.match,r)})}return s},[ct]:(e,t)=>{for(const s of t.keys())e.delete(s);return e}},at=(e,t,s,n,o,u)=>{const{k:i,b:r,d}=u;return Math.log(1+(s-t+.5)/(t+.5))*(d+e*(i+1)/(e+i*(1-r+r*n/o)))},ft=e=>(t,s,n)=>{const o=typeof e.fuzzy=="function"?e.fuzzy(t,s,n):e.fuzzy||!1,u=typeof e.prefix=="function"?e.prefix(t,s,n):e.prefix===!0;return{term:t,fuzzy:o,prefix:u}},H=(e,t,s,n)=>{for(const o of Object.keys(e._fieldIds))if(e._fieldIds[o]===s){e._options.logger("warn",`SlimSearch: document with ID ${e._documentIds.get(t)} has changed before removal: term "${n}" was not present in field "${o}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}},gt=(e,t,s,n)=>{if(!e._index.has(n)){H(e,s,t,n);return}const o=e._index.fetch(n,ht),u=o.get(t);u==null||u.get(s)==null?H(e,s,t,n):u.get(s)<=1?u.size<=1?o.delete(t):u.delete(s):u.set(s,u.get(s)-1),e._index.get(n).size===0&&e._index.delete(n)},mt={k:1.2,b:.7,d:.5},pt={idField:"id",extractField:(e,t)=>e[t],tokenize:e=>e.split(rt),processTerm:e=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t)=>{typeof console?.[e]=="function"&&console[e](t)},autoVacuum:!0},J={combineWith:S,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:mt},Ft={combineWith:q,prefix:(e,t,s)=>t===s.length-1},_t={batchSize:1e3,batchWait:10},U={minDirtFactor:.1,minDirtCount:20},yt={..._t,...U},Y=(e,t=S)=>{if(e.length===0)return new Map;const s=t.toLowerCase();return e.reduce(dt[s])||new Map},B=(e,t,s,n,o,u,i,r,d=new Map)=>{if(o==null)return d;for(const l of Object.keys(u)){const a=u[l],h=e._fieldIds[l],m=o.get(h);if(m==null)continue;let p=m.size;const f=e._avgFieldLength[h];for(const c of m.keys()){if(!e._documentIds.has(c)){gt(e,h,c,s),p-=1;continue}const g=i?i(e._documentIds.get(c),s,e._storedFields.get(c)):1;if(!g)continue;const _=m.get(c),y=e._fieldLength.get(c)[h],b=at(_,p,e._documentCount,y,f,r),z=n*a*g*b,A=d.get(c);if(A){A.score+=z,lt(A.terms,t);const w=N(A.match,s);w?w.push(l):A.match[s]=[l]}else d.set(c,{score:z,terms:[t],match:{[s]:[l]}})}}return d},At=(e,t,s)=>{const n={...e._options.searchOptions,...s},o=(n.fields||e._options.fields).reduce((c,g)=>({...c,[g]:N(n.boost,g)||1}),{}),{boostDocument:u,weights:i,maxFuzzy:r,bm25:d}=n,{fuzzy:l,prefix:a}={...J.weights,...i},h=e._index.get(t.term),m=B(e,t.term,t.term,1,h,o,u,d);let p,f;if(t.prefix&&(p=e._index.atPrefix(t.term)),t.fuzzy){const c=t.fuzzy===!0?.2:t.fuzzy,g=c<1?Math.min(r,Math.round(t.term.length*c)):c;g&&(f=e._index.fuzzyGet(t.term,g))}if(p)for(const[c,g]of p){const _=c.length-t.term.length;if(!_)continue;f?.delete(c);const y=a*c.length/(c.length+.3*_);B(e,t.term,c,y,g,o,u,d,m)}if(f)for(const c of f.keys()){const[g,_]=f.get(c);if(!_)continue;const y=l*c.length/(c.length+_);B(e,t.term,c,y,g,o,u,d,m)}return m},X=(e,t,s={})=>{if(typeof t!="string"){const a={...s,...t,queries:void 0},h=t.queries.map(m=>X(e,m,a));return Y(h,a.combineWith)}const{tokenize:n,processTerm:o,searchOptions:u}=e._options,i={tokenize:n,processTerm:o,...u,...s},{tokenize:r,processTerm:d}=i,l=r(t).flatMap(a=>d(a)).filter(a=>!!a).map(ft(i)).map(a=>At(e,a,i));return Y(l,i.combineWith)},K=(e,t,s={})=>{const n=X(e,t,s),o=[];for(const[u,{score:i,terms:r,match:d}]of n){const l=r.length,a={id:e._documentIds.get(u),score:i*l,terms:Object.keys(d),match:d};Object.assign(a,e._storedFields.get(u)),(s.filter==null||s.filter(a))&&o.push(a)}return o.sort(G),o},Ct=(e,t,s={})=>{s={...e._options.autoSuggestOptions,...s};const n=new Map;for(const{score:u,terms:i}of K(e,t,s)){const r=i.join(" "),d=n.get(r);d!=null?(d.score+=u,d.count+=1):n.set(r,{score:u,terms:i,count:1})}const o=[];for(const[u,{score:i,terms:r,count:d}]of n)o.push({suggestion:u,terms:r,score:i/d});return o.sort(G),o};class Et{_options;_index;_documentCount;_documentIds;_idToShortId;_fieldIds;_fieldLength;_avgFieldLength;_nextId;_storedFields;_dirtCount;_currentVacuum;_enqueuedVacuum;_enqueuedVacuumConditions;constructor(t){if(t?.fields==null)throw new Error('SlimSearch: option "fields" must be provided');const s=t.autoVacuum==null||t.autoVacuum===!0?yt:t.autoVacuum;this._options={...pt,...t,autoVacuum:s,searchOptions:{...J,...t.searchOptions||{}},autoSuggestOptions:{...Ft,...t.autoSuggestOptions||{}}},this._index=new C,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=U,this.addFields(this._options.fields)}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}get documentCount(){return this._documentCount}get termCount(){return this._index.size}toJSON(){const t=[];for(const[s,n]of this._index){const o={};for(const[u,i]of n)o[u]=Object.fromEntries(i);t.push([s,o])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,serializationVersion:2}}addFields(t){for(let s=0;s<t.length;s++)this._fieldIds[t[s]]=s}}const zt=({index:e,documentCount:t,nextId:s,documentIds:n,fieldIds:o,fieldLength:u,averageFieldLength:i,storedFields:r,dirtCount:d,serializationVersion:l},a)=>{if(l!==1&&l!==2)throw new Error("SlimSearch: cannot deserialize an index created with an incompatible version");const h=new Et(a);h._documentCount=t,h._nextId=s,h._documentIds=k(n),h._idToShortId=new Map,h._fieldIds=o,h._fieldLength=k(u),h._avgFieldLength=i,h._storedFields=k(r),h._dirtCount=d||0,h._index=new C;for(const[m,p]of h._documentIds)h._idToShortId.set(p,m);for(const[m,p]of e){const f=new Map;for(const c of Object.keys(p)){let g=p[c];l===1&&(g=g.ds),f.set(parseInt(c,10),k(g))}h._index.set(m,f)}return h},Q=Object.entries,wt=Object.fromEntries,j=(e,t)=>{const s=e.toLowerCase(),n=t.toLowerCase(),o=[];let u=0,i=0;const r=(l,a=!1)=>{let h="";i===0?h=l.length>20?`… ${l.slice(-20)}`:l:a?h=l.length+i>100?`${l.slice(0,100-i)}… `:l:h=l.length>20?`${l.slice(0,20)} … ${l.slice(-20)}`:l,h&&o.push(h),i+=h.length,a||(o.push(["mark",t]),i+=t.length,i>=100&&o.push(" …"))};let d=s.indexOf(n,u);if(d===-1)return null;for(;d>=0;){const l=d+n.length;if(r(e.slice(u,d)),u=l,i>100)break;d=s.indexOf(n,u)}return i<100&&r(e.slice(u),!0),o},Z=/[\u4e00-\u9fa5]/g,tt=(e={})=>({fuzzy:.2,prefix:!0,processTerm:t=>{const s=t.match(Z)||[],n=t.replace(Z,"").toLowerCase();return n?[n,...s]:[...s]},...e}),xt=(e,t)=>t.contents.reduce((s,[,n])=>s+n,0)-e.contents.reduce((s,[,n])=>s+n,0),kt=(e,t)=>Math.max(...t.contents.map(([,s])=>s))-Math.max(...e.contents.map(([,s])=>s)),et=(e,t,s={})=>{const n={};return K(t,e,tt({boost:{h:2,t:1,c:4},...s})).forEach(o=>{const{id:u,terms:i,score:r}=o,d=u.includes("@"),l=u.includes("#"),[a,h]=u.split(/[#@]/),m=i.sort((f,c)=>f.length-c.length).filter((f,c)=>i.slice(c+1).every(g=>!g.includes(f))),{contents:p}=n[a]??={title:"",contents:[]};if(d)p.push([{type:"customField",key:a,index:h,display:m.map(f=>o.c.map(c=>j(c,f))).flat().filter(f=>f!==null)},r]);else{const f=m.map(c=>j(o.h,c)).filter(c=>c!==null);if(f.length&&p.push([{type:l?"heading":"title",key:a,...l&&{anchor:h},display:f},r]),"t"in o)for(const c of o.t){const g=m.map(_=>j(c,_)).filter(_=>_!==null);g.length&&p.push([{type:"text",key:a,...l&&{anchor:h},display:g},r])}}}),Q(n).sort(([,o],[,u])=>"max"==="total"?xt(o,u):kt(o,u)).map(([o,{title:u,contents:i}])=>{if(!u){const r=it(t,o);r&&(u=r.h)}return{title:u,contents:i.map(([r])=>r)}})},st=(e,t,s={})=>Ct(t,e,tt(s)).map(({suggestion:n})=>n),v=wt(Q(JSON.parse("{\"/\":{\"documentCount\":57,\"nextId\":57,\"documentIds\":{\"0\":\"v-8daa1a0e\",\"1\":\"v-d5fe0c96\",\"2\":\"v-645e184f\",\"3\":\"v-d440f426\",\"4\":\"v-4313a4f9\",\"5\":\"v-4313a4f9#1-懒汉模式\",\"6\":\"v-4313a4f9#2-饿汉模式\",\"7\":\"v-4313a4f9#3-内部类实现\",\"8\":\"v-4313a4f9#4-枚举实现\",\"9\":\"v-dddcedd8\",\"10\":\"v-20a80b5f\",\"11\":\"v-20a80b5f#1-注解概述\",\"12\":\"v-20a80b5f#11-注解入门\",\"13\":\"v-20a80b5f#12-内置注解\",\"14\":\"v-20a80b5f#13-元注解\",\"15\":\"v-20a80b5f#14-自定义注解\",\"16\":\"v-20a80b5f#2-反射概述\",\"17\":\"v-20a80b5f#21-反射机制概述\",\"18\":\"v-20a80b5f#22-理解-class-类并获取-class-实例\",\"19\":\"v-20a80b5f#23-类的加载与-classloader\",\"20\":\"v-20a80b5f#24-分析类的初始化\",\"21\":\"v-20a80b5f#25-类加载器\",\"22\":\"v-20a80b5f#26-获取类的运行时结构\",\"23\":\"v-20a80b5f#27-动态创建对象执行方法\",\"24\":\"v-20a80b5f#28-性能对比分析\",\"25\":\"v-20a80b5f#29-获取泛型信息\",\"26\":\"v-20a80b5f#210-获取注解信息\",\"27\":\"v-32d02696\",\"28\":\"v-6bc2dffc\",\"29\":\"v-3d22213a\",\"30\":\"v-3d22213a#1-常见-mime-类型\",\"31\":\"v-3d22213a#2-nginx-配置-mime-类型\",\"32\":\"v-3cc19731\",\"33\":\"v-3cc19731#1-常见标签\",\"34\":\"v-3cc19731#2-示例\",\"35\":\"v-364dfef5\",\"36\":\"v-364dfef5#11-命名风格\",\"37\":\"v-364dfef5#12-常量定义\",\"38\":\"v-364dfef5#13-代码格式\",\"39\":\"v-364dfef5#14-oop-规约\",\"40\":\"v-364dfef5#15-日期时间\",\"41\":\"v-364dfef5#16-集合处理\",\"42\":\"v-364dfef5#17-并发处理\",\"43\":\"v-364dfef5#18-控制语句\",\"44\":\"v-364dfef5#19-注释规约\",\"45\":\"v-364dfef5#110-前后端规约\",\"46\":\"v-1d6de554\",\"47\":\"v-1d6de554#11-历史\",\"48\":\"v-1d6de554#12-语言特性\",\"49\":\"v-1d6de554#13-发行版本\",\"50\":\"v-1d6de554#14-安装开发环境\",\"51\":\"v-1d6de554#15-编码习惯\",\"52\":\"v-1d6de516\",\"53\":\"v-1d6de516#21-java-标识符\",\"54\":\"v-1d6de516#22-数据类型\",\"55\":\"v-1d6de516#23-类型转换\",\"56\":\"v-1d6de516#附录易错类型讲解\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[1],\"1\":[1],\"2\":[2],\"3\":[1],\"4\":[1],\"5\":[2],\"6\":[2],\"7\":[2],\"8\":[2],\"9\":[3],\"10\":[2],\"11\":[2],\"12\":[2],\"13\":[3],\"14\":[3],\"15\":[3],\"16\":[2],\"17\":[3],\"18\":[5],\"19\":[4],\"20\":[3],\"21\":[3],\"22\":[3],\"23\":[3],\"24\":[3],\"25\":[3],\"26\":[3],\"27\":[2],\"28\":[1],\"29\":[2],\"30\":[4],\"31\":[5],\"32\":[4],\"33\":[2],\"34\":[2],\"35\":[2],\"36\":[2],\"37\":[3],\"38\":[3],\"39\":[4],\"40\":[3],\"41\":[3],\"42\":[3],\"43\":[3],\"44\":[3],\"45\":[3],\"46\":[3],\"47\":[2],\"48\":[3],\"49\":[3],\"50\":[3],\"51\":[3],\"52\":[3],\"53\":[4],\"54\":[2],\"55\":[3],\"56\":[2]},\"averageFieldLength\":[2.666666666666666],\"storedFields\":{\"0\":{\"h\":\"后端笔记合集\"},\"1\":{\"h\":\"设计模式\"},\"2\":{\"h\":\"Java 语言\"},\"3\":{\"h\":\"后端工具合集\"},\"4\":{\"h\":\"单例模式\"},\"5\":{\"h\":\"1. 懒汉模式\"},\"6\":{\"h\":\"2. 饿汉模式\"},\"7\":{\"h\":\"3. 内部类实现\"},\"8\":{\"h\":\"4. 枚举实现\"},\"9\":{\"h\":\"阿里 Java 开发手册\"},\"10\":{\"h\":\"Java 注解和反射\"},\"11\":{\"h\":\"1. 注解概述\"},\"12\":{\"h\":\"1.1 注解入门\"},\"13\":{\"h\":\"1.2 内置注解\"},\"14\":{\"h\":\"1.3 元注解\"},\"15\":{\"h\":\"1.4 自定义注解\"},\"16\":{\"h\":\"2. 反射概述\"},\"17\":{\"h\":\"2.1 反射机制概述\"},\"18\":{\"h\":\"2.2 理解 Class 类并获取 Class 实例\"},\"19\":{\"h\":\"2.3 类的加载与 ClassLoader\"},\"20\":{\"h\":\"2.4 分析类的初始化\"},\"21\":{\"h\":\"2.5 类加载器\"},\"22\":{\"h\":\"2.6 获取类的运行时结构\"},\"23\":{\"h\":\"2.7 动态创建对象执行方法\"},\"24\":{\"h\":\"2.8 性能对比分析\"},\"25\":{\"h\":\"2.9 获取泛型信息\"},\"26\":{\"h\":\"2.10 获取注解信息\"},\"27\":{\"h\":\"Java 教程\"},\"28\":{\"h\":\"Nginx\"},\"29\":{\"h\":\"MIME 类型\"},\"30\":{\"h\":\"1. 常见 MIME 类型\"},\"31\":{\"h\":\"2. Nginx 配置 MIME 类型\"},\"32\":{\"h\":\"使用 Docker 部署 Nginx\"},\"33\":{\"h\":\"1. 常见标签\"},\"34\":{\"h\":\"2. 示例\"},\"35\":{\"h\":\"1. 编程规约\"},\"36\":{\"h\":\"1.1 命名风格\"},\"37\":{\"h\":\"1.2 常量定义\"},\"38\":{\"h\":\"1.3 代码格式\"},\"39\":{\"h\":\"1.4 OOP 规约\"},\"40\":{\"h\":\"1.5 日期时间\"},\"41\":{\"h\":\"1.6 集合处理\"},\"42\":{\"h\":\"1.7 并发处理\"},\"43\":{\"h\":\"1.8 控制语句\"},\"44\":{\"h\":\"1.9 注释规约\"},\"45\":{\"h\":\"1.10 前后端规约\"},\"46\":{\"h\":\"1. Java 语言概述\"},\"47\":{\"h\":\"1.1 历史\"},\"48\":{\"h\":\"1.2 语言特性\"},\"49\":{\"h\":\"1.3 发行版本\"},\"50\":{\"h\":\"1.4 安装开发环境\"},\"51\":{\"h\":\"1.5 编码习惯\"},\"52\":{\"h\":\"2. Java 基础语法\"},\"53\":{\"h\":\"2.1 Java 标识符\"},\"54\":{\"h\":\"2.2 数据类型\"},\"55\":{\"h\":\"2.3 类型转换\"},\"56\":{\"h\":\"附录：易错类型讲解\"}},\"dirtCount\":0,\"index\":[[\"易错类型讲解\",{\"0\":{\"56\":1}}],[\"附录\",{\"0\":{\"56\":1}}],[\"数据类型\",{\"0\":{\"54\":1}}],[\"标识符\",{\"0\":{\"53\":1}}],[\"基础语法\",{\"0\":{\"52\":1}}],[\"编码习惯\",{\"0\":{\"51\":1}}],[\"编程规约\",{\"0\":{\"35\":1}}],[\"安装开发环境\",{\"0\":{\"50\":1}}],[\"发行版本\",{\"0\":{\"49\":1}}],[\"历史\",{\"0\":{\"47\":1}}],[\"前后端规约\",{\"0\":{\"45\":1}}],[\"注释规约\",{\"0\":{\"44\":1}}],[\"注解入门\",{\"0\":{\"12\":1}}],[\"注解概述\",{\"0\":{\"11\":1}}],[\"注解和反射\",{\"0\":{\"10\":1}}],[\"控制语句\",{\"0\":{\"43\":1}}],[\"并发处理\",{\"0\":{\"42\":1}}],[\"集合处理\",{\"0\":{\"41\":1}}],[\"日期时间\",{\"0\":{\"40\":1}}],[\"规约\",{\"0\":{\"39\":1}}],[\"oop\",{\"0\":{\"39\":1}}],[\"代码格式\",{\"0\":{\"38\":1}}],[\"常量定义\",{\"0\":{\"37\":1}}],[\"常见标签\",{\"0\":{\"33\":1}}],[\"常见\",{\"0\":{\"30\":1}}],[\"命名风格\",{\"0\":{\"36\":1}}],[\"示例\",{\"0\":{\"34\":1}}],[\"部署\",{\"0\":{\"32\":1}}],[\"docker\",{\"0\":{\"32\":1}}],[\"使用\",{\"0\":{\"32\":1}}],[\"配置\",{\"0\":{\"31\":1}}],[\"mime\",{\"0\":{\"29\":1,\"30\":1,\"31\":1}}],[\"nginx\",{\"0\":{\"28\":1,\"31\":1,\"32\":1}}],[\"教程\",{\"0\":{\"27\":1}}],[\"获取注解信息\",{\"0\":{\"26\":1}}],[\"获取泛型信息\",{\"0\":{\"25\":1}}],[\"获取类的运行时结构\",{\"0\":{\"22\":1}}],[\"9\",{\"0\":{\"25\":1,\"44\":1}}],[\"性能对比分析\",{\"0\":{\"24\":1}}],[\"8\",{\"0\":{\"24\":1,\"43\":1}}],[\"动态创建对象执行方法\",{\"0\":{\"23\":1}}],[\"7\",{\"0\":{\"23\":1,\"42\":1}}],[\"6\",{\"0\":{\"22\":1,\"41\":1}}],[\"5\",{\"0\":{\"21\":1,\"40\":1,\"51\":1}}],[\"分析类的初始化\",{\"0\":{\"20\":1}}],[\"类型转换\",{\"0\":{\"55\":1}}],[\"类型\",{\"0\":{\"29\":1,\"30\":1,\"31\":1}}],[\"类加载器\",{\"0\":{\"21\":1}}],[\"类的加载与\",{\"0\":{\"19\":1}}],[\"类并获取\",{\"0\":{\"18\":1}}],[\"实例\",{\"0\":{\"18\":1}}],[\"classloader\",{\"0\":{\"19\":1}}],[\"class\",{\"0\":{\"18\":2}}],[\"理解\",{\"0\":{\"18\":1}}],[\"反射机制概述\",{\"0\":{\"17\":1}}],[\"反射概述\",{\"0\":{\"16\":1}}],[\"自定义注解\",{\"0\":{\"15\":1}}],[\"元注解\",{\"0\":{\"14\":1}}],[\"内置注解\",{\"0\":{\"13\":1}}],[\"内部类实现\",{\"0\":{\"7\":1}}],[\"开发手册\",{\"0\":{\"9\":1}}],[\"阿里\",{\"0\":{\"9\":1}}],[\"枚举实现\",{\"0\":{\"8\":1}}],[\"4\",{\"0\":{\"8\":1,\"15\":1,\"20\":1,\"39\":1,\"50\":1}}],[\"3\",{\"0\":{\"7\":1,\"14\":1,\"19\":1,\"38\":1,\"49\":1,\"55\":1}}],[\"饿汉模式\",{\"0\":{\"6\":1}}],[\"2\",{\"0\":{\"6\":1,\"13\":1,\"16\":1,\"17\":1,\"18\":2,\"19\":1,\"20\":1,\"21\":1,\"22\":1,\"23\":1,\"24\":1,\"25\":1,\"26\":1,\"31\":1,\"34\":1,\"37\":1,\"48\":1,\"52\":1,\"53\":1,\"54\":2,\"55\":1}}],[\"懒汉模式\",{\"0\":{\"5\":1}}],[\"10\",{\"0\":{\"26\":1,\"45\":1}}],[\"1\",{\"0\":{\"5\":1,\"11\":1,\"12\":2,\"13\":1,\"14\":1,\"15\":1,\"17\":1,\"30\":1,\"33\":1,\"35\":1,\"36\":2,\"37\":1,\"38\":1,\"39\":1,\"40\":1,\"41\":1,\"42\":1,\"43\":1,\"44\":1,\"45\":1,\"46\":1,\"47\":2,\"48\":1,\"49\":1,\"50\":1,\"51\":1,\"53\":1}}],[\"单例模式\",{\"0\":{\"4\":1}}],[\"后端工具合集\",{\"0\":{\"3\":1}}],[\"后端笔记合集\",{\"0\":{\"0\":1}}],[\"语言特性\",{\"0\":{\"48\":1}}],[\"语言概述\",{\"0\":{\"46\":1}}],[\"语言\",{\"0\":{\"2\":1}}],[\"java\",{\"0\":{\"2\":1,\"9\":1,\"10\":1,\"27\":1,\"46\":1,\"52\":1,\"53\":1}}],[\"设计模式\",{\"0\":{\"1\":1}}]],\"serializationVersion\":2}}")).map(([e,t])=>[e,zt(t,{fields:["h","t","c"],storeFields:["h","t","c"]})]));self.onmessage=({data:{type:e="all",query:t,locale:s,options:n}})=>{e==="suggest"?self.postMessage(st(t,v[s],n)):e==="search"?self.postMessage(et(t,v[s],n)):self.postMessage({suggestions:st(t,v[s],n),results:et(t,v[s],n)})};
//# sourceMappingURL=index.js.map
