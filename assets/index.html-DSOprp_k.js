import{_ as p}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as l,o as c,c as i,b as a,a as e,w as t,e as n,d as o}from"./app-B1gzhM40.js";const u={},d=a("h1",{id:"2-java-基础语法",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#2-java-基础语法"},[a("span",null,"2. Java 基础语法")])],-1),r=a("h2",{id:"21-java-标识符",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#21-java-标识符"},[a("span",null,"2.1 Java 标识符")])],-1),k=a("p",null,"Java 有哪些关键字？",-1),v=o('<p>Java 标识符的要求：</p><ul><li>所有的标识符都应该以字母（<code>A-Z</code> 或者 <code>a-z</code>），美元符（<code>$</code>）、或者下划线（<code>_</code>）开始</li><li>首字符之后可以是字母（<code>A-Z</code> 或者 <code>a-z</code>），美元符（<code>$</code>）、下划线（<code>_</code>）或数字（<code>0-9</code>）的任何字符组合</li><li>关键字不能用作标识符</li><li>标识符是大小写敏感的</li></ul><h2 id="22-数据类型" tabindex="-1"><a class="header-anchor" href="#22-数据类型"><span>2.2 数据类型</span></a></h2><p>Java 是强类型语言：要求变量的使用要严格符合规定，所有的变量必须先定义才能使用。</p><p>Java 的数据分为两大类：</p><ul><li><strong>基本类型</strong>（Primitive Type） <ul><li>数值类型 <ul><li>整数类型 <ul><li><code>byte</code>，1 个字节</li><li><code>short</code>，2 个字节</li><li><code>int</code>，4 个字节</li><li><code>long</code>，8 个字节</li></ul></li><li>浮点类型 <ul><li><code>float</code>，4 个字节</li><li><code>double</code>，8 个字节</li></ul></li><li>字符类型 <ul><li><code>char</code>，2 个字节</li></ul></li></ul></li><li>布尔类型 <ul><li><code>boolean</code> 类型，占 1 位</li></ul></li></ul></li><li><strong>引用类型</strong>（Reference Type） <ul><li>类</li><li>接口</li><li>数组</li></ul></li></ul><h2 id="23-类型转换" tabindex="-1"><a class="header-anchor" href="#23-类型转换"><span>2.3 类型转换</span></a></h2>',7),m=o(`<h2 id="附录易错类型讲解" tabindex="-1"><a class="header-anchor" href="#附录易错类型讲解"><span>附录：易错类型讲解</span></a></h2><p>注意看下面的代码：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Hello</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">float</span> f <span class="token operator">=</span> <span class="token number">0.1f</span><span class="token punctuation">;</span>
        <span class="token keyword">double</span> d <span class="token operator">=</span> <span class="token number">1.0</span> <span class="token operator">/</span> <span class="token number">10</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>f <span class="token operator">==</span> d<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">float</span> f1 <span class="token operator">=</span> <span class="token number">1241234124134123f</span><span class="token punctuation">;</span>
        <span class="token keyword">float</span> f2 <span class="token operator">=</span> f1 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>f1 <span class="token operator">==</span> f2<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>最后输出结果为：</p><div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token boolean">false</span>
<span class="token boolean">true</span>
</code></pre></div><p>我们再看下面的 <code>String</code> 类型示例：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Hello</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> s1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> s2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>s1 <span class="token operator">==</span> s2<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// false</span>

        <span class="token class-name">String</span> s3 <span class="token operator">=</span> <span class="token string">&quot;hello&quot;</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> s4 <span class="token operator">=</span> <span class="token string">&quot;hello&quot;</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>s3 <span class="token operator">==</span> s4<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// true</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这是引用类型和值类型的比较问题。</p>`,8);function h(g,b){const s=l("Badge");return c(),i("div",null,[d,r,k,a("p",null,[e(s,{type:"danger"},{default:t(()=>[n("TODO")]),_:1})]),v,a("p",null,[e(s,{type:"danger"},{default:t(()=>[n("TODO")]),_:1}),n(" 详细讲解。")]),m])}const _=p(u,[["render",h],["__file","index.html.vue"]]),j=JSON.parse('{"path":"/java-lang/java-tutorial/chapter02/","title":"2. Java 基础语法","lang":"zh-CN","frontmatter":{"description":"2. Java 基础语法 2.1 Java 标识符 Java 有哪些关键字？ Java 标识符的要求： 所有的标识符都应该以字母（A-Z 或者 a-z），美元符（$）、或者下划线（_）开始 首字符之后可以是字母（A-Z 或者 a-z），美元符（$）、下划线（_）或数字（0-9）的任何字符组合 关键字不能用作标识符 标识符是大小写敏感的 2.2 数据类型...","head":[["meta",{"property":"og:url","content":"https://blog.alexsun.top/vuepress-frontend-notes/vuepress-frontend-notes/java-lang/java-tutorial/chapter02/"}],["meta",{"property":"og:site_name","content":"后端笔记"}],["meta",{"property":"og:title","content":"2. Java 基础语法"}],["meta",{"property":"og:description","content":"2. Java 基础语法 2.1 Java 标识符 Java 有哪些关键字？ Java 标识符的要求： 所有的标识符都应该以字母（A-Z 或者 a-z），美元符（$）、或者下划线（_）开始 首字符之后可以是字母（A-Z 或者 a-z），美元符（$）、下划线（_）或数字（0-9）的任何字符组合 关键字不能用作标识符 标识符是大小写敏感的 2.2 数据类型..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-06T13:09:45.000Z"}],["meta",{"property":"article:author","content":"鸭梨"}],["meta",{"property":"article:modified_time","content":"2024-05-06T13:09:45.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"2. Java 基础语法\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-05-06T13:09:45.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"鸭梨\\",\\"url\\":\\"https://blog.alexsun.top/\\"}]}"]]},"headers":[{"level":2,"title":"2.1 Java 标识符","slug":"21-java-标识符","link":"#21-java-标识符","children":[]},{"level":2,"title":"2.2 数据类型","slug":"22-数据类型","link":"#22-数据类型","children":[]},{"level":2,"title":"2.3 类型转换","slug":"23-类型转换","link":"#23-类型转换","children":[]},{"level":2,"title":"附录：易错类型讲解","slug":"附录易错类型讲解","link":"#附录易错类型讲解","children":[]}],"git":{"createdTime":1677339576000,"updatedTime":1715000985000,"contributors":[{"name":"Sun-ZhenXing","email":"1006925066@qq.com","commits":1}]},"readingTime":{"minutes":1.24,"words":371},"filePathRelative":"java-lang/java-tutorial/chapter02/index.md","localizedDate":"2023年2月25日","autoDesc":true,"excerpt":"\\n<h2>2.1 Java 标识符</h2>\\n<p>Java 有哪些关键字？</p>\\n<p> <!-- https://www.runoob.com/java/java-basic-syntax.html --></p>\\n<p>Java 标识符的要求：</p>\\n<ul>\\n<li>所有的标识符都应该以字母（<code>A-Z</code> 或者 <code>a-z</code>），美元符（<code>$</code>）、或者下划线（<code>_</code>）开始</li>\\n<li>首字符之后可以是字母（<code>A-Z</code> 或者 <code>a-z</code>），美元符（<code>$</code>）、下划线（<code>_</code>）或数字（<code>0-9</code>）的任何字符组合</li>\\n<li>关键字不能用作标识符</li>\\n<li>标识符是大小写敏感的</li>\\n</ul>"}');export{_ as comp,j as data};
