import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as e,o as t,c as o,b as s,a as p,w as r,d as c,e as i}from"./app-B1gzhM40.js";const l={},u=s("h1",{id:"ossfs-挂载",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#ossfs-挂载"},[s("span",null,"OSSFs 挂载")])],-1),d={class:"table-of-contents"},m=c(`<h2 id="1-概述" tabindex="-1"><a class="header-anchor" href="#1-概述"><span>1. 概述</span></a></h2><p>下面使用 <code>Dockerfile</code> 用于构建 <code>ossfs</code> 镜像，<code>docker run</code> 启动容器并挂载 OSS。</p><div class="language-docker line-numbers-mode" data-ext="docker" data-title="docker"><pre class="language-docker"><code><span class="token instruction"><span class="token keyword">FROM</span> ubuntu:22.04</span>

<span class="token instruction"><span class="token keyword">ENV</span> OSSFS_URL=https://gosspublic.alicdn.com/ossfs/ossfs_1.91.1_ubuntu22.04_amd64.deb</span>
<span class="token instruction"><span class="token keyword">ENV</span> OSS_ENDPOINT=oss-cn-hangzhou.aliyuncs.com</span>
<span class="token instruction"><span class="token keyword">ENV</span> OSS_BUCKET=test-bucket</span>
<span class="token instruction"><span class="token keyword">ENV</span> OSS_ACCESS_KEY_ID=AccessKeyId</span>
<span class="token instruction"><span class="token keyword">ENV</span> OSS_ACCESS_KEY_SECRET=AccessKeySecret</span>

<span class="token instruction"><span class="token keyword">WORKDIR</span> /oss</span>

<span class="token instruction"><span class="token keyword">RUN</span> echo <span class="token string">&quot;deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ jammy main restricted universe multiverse&quot;</span> &gt; /etc/apt/sources.list  &amp;&amp; <span class="token operator">\\</span>
    echo <span class="token string">&quot;deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ jammy-updates main restricted universe multiverse&quot;</span> &gt;&gt; /etc/apt/sources.list  &amp;&amp; <span class="token operator">\\</span>
    echo <span class="token string">&quot;deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ jammy-backports main restricted universe multiverse&quot;</span> &gt;&gt; /etc/apt/sources.list  &amp;&amp; <span class="token operator">\\</span>
    echo <span class="token string">&quot;deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ jammy-security main restricted universe multiverse&quot;</span> &gt;&gt; /etc/apt/sources.list &amp;&amp; <span class="token operator">\\</span>
    apt update &amp;&amp; <span class="token operator">\\</span>
    apt upgrade -y &amp;&amp; <span class="token operator">\\</span>
    apt install curl gdebi-core mime-support -y &amp;&amp; <span class="token operator">\\</span>
    curl -o ossfs.deb <span class="token variable">$OSSFS_URL</span> &amp;&amp; <span class="token operator">\\</span>
    gdebi -n ossfs.deb &amp;&amp; <span class="token operator">\\</span>
    echo <span class="token variable">\${OSS_BUCKET}</span>:<span class="token variable">\${OSS_ACCESS_KEY_ID}</span>:<span class="token variable">\${OSS_ACCESS_KEY_SECRET}</span> &gt; /etc/passwd-ossfs &amp;&amp; <span class="token operator">\\</span>
    chmod 640 /etc/passwd-ossfs &amp;&amp; <span class="token operator">\\</span>
    mkdir -p /oss/<span class="token variable">\${OSS_BUCKET}</span> &amp;&amp; <span class="token operator">\\</span>
    rm -rf ossfs.deb &amp;&amp; <span class="token operator">\\</span>
    apt clean</span>

<span class="token instruction"><span class="token keyword">CMD</span> [ <span class="token string">&quot;python3&quot;</span>, <span class="token string">&quot;-m&quot;</span>, <span class="token string">&quot;http.server&quot;</span> ]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>构建镜像：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">docker</span> build <span class="token parameter variable">-t</span> ossfs <span class="token punctuation">\\</span>
  --build-arg <span class="token assign-left variable">OSS_ENDPOINT</span><span class="token operator">=</span>oss-cn-shanghai.aliyuncs.com <span class="token punctuation">\\</span>
  --build-arg <span class="token assign-left variable">OSS_BUCKET</span><span class="token operator">=</span>alexsun <span class="token punctuation">\\</span>
  --build-arg <span class="token assign-left variable">OSS_ACCESS_KEY_ID</span><span class="token operator">=</span>xxx <span class="token punctuation">\\</span>
  --build-arg <span class="token assign-left variable">OSS_ACCESS_KEY_SECRET</span><span class="token operator">=</span>xxx <span class="token punctuation">\\</span>
  <span class="token builtin class-name">.</span>
</code></pre></div><p>启动容器：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">docker</span> run <span class="token parameter variable">-it</span> <span class="token punctuation">\\</span>
  <span class="token parameter variable">--name</span> oss <span class="token punctuation">\\</span>
  <span class="token parameter variable">--privileged</span><span class="token operator">=</span>true <span class="token punctuation">\\</span>
  <span class="token parameter variable">-p</span> <span class="token number">8000</span>:8000 <span class="token punctuation">\\</span>
  ossfs
</code></pre></div>`,7);function k(v,b){const a=e("router-link");return t(),o("div",null,[u,s("nav",d,[s("ul",null,[s("li",null,[p(a,{to:"#1-概述"},{default:r(()=>[i("1. 概述")]),_:1})])])]),m])}const h=n(l,[["render",k],["__file","ossfs.html.vue"]]),_=JSON.parse('{"path":"/cloud/oss/ossfs.html","title":"OSSFs 挂载","lang":"zh-CN","frontmatter":{"description":"OSSFs 挂载 1. 概述 下面使用 Dockerfile 用于构建 ossfs 镜像，docker run 启动容器并挂载 OSS。 构建镜像： 启动容器：","head":[["meta",{"property":"og:url","content":"https://blog.alexsun.top/vuepress-frontend-notes/vuepress-frontend-notes/cloud/oss/ossfs.html"}],["meta",{"property":"og:site_name","content":"后端笔记"}],["meta",{"property":"og:title","content":"OSSFs 挂载"}],["meta",{"property":"og:description","content":"OSSFs 挂载 1. 概述 下面使用 Dockerfile 用于构建 ossfs 镜像，docker run 启动容器并挂载 OSS。 构建镜像： 启动容器："}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-06T13:09:45.000Z"}],["meta",{"property":"article:author","content":"鸭梨"}],["meta",{"property":"article:modified_time","content":"2024-05-06T13:09:45.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"OSSFs 挂载\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-05-06T13:09:45.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"鸭梨\\",\\"url\\":\\"https://blog.alexsun.top/\\"}]}"]]},"headers":[{"level":2,"title":"1. 概述","slug":"1-概述","link":"#1-概述","children":[]}],"git":{"createdTime":1699426009000,"updatedTime":1715000985000,"contributors":[{"name":"Sun-ZhenXing","email":"1006925066@qq.com","commits":1}]},"readingTime":{"minutes":0.26,"words":77},"filePathRelative":"cloud/oss/ossfs.md","localizedDate":"2023年11月8日","autoDesc":true,"excerpt":"\\n\\n<h2>1. 概述</h2>\\n<p>下面使用 <code>Dockerfile</code> 用于构建 <code>ossfs</code> 镜像，<code>docker run</code> 启动容器并挂载 OSS。</p>\\n<div class=\\"language-docker\\" data-ext=\\"docker\\" data-title=\\"docker\\"><pre class=\\"language-docker\\"><code><span class=\\"token instruction\\"><span class=\\"token keyword\\">FROM</span> ubuntu:22.04</span>\\n\\n<span class=\\"token instruction\\"><span class=\\"token keyword\\">ENV</span> OSSFS_URL=https://gosspublic.alicdn.com/ossfs/ossfs_1.91.1_ubuntu22.04_amd64.deb</span>\\n<span class=\\"token instruction\\"><span class=\\"token keyword\\">ENV</span> OSS_ENDPOINT=oss-cn-hangzhou.aliyuncs.com</span>\\n<span class=\\"token instruction\\"><span class=\\"token keyword\\">ENV</span> OSS_BUCKET=test-bucket</span>\\n<span class=\\"token instruction\\"><span class=\\"token keyword\\">ENV</span> OSS_ACCESS_KEY_ID=AccessKeyId</span>\\n<span class=\\"token instruction\\"><span class=\\"token keyword\\">ENV</span> OSS_ACCESS_KEY_SECRET=AccessKeySecret</span>\\n\\n<span class=\\"token instruction\\"><span class=\\"token keyword\\">WORKDIR</span> /oss</span>\\n\\n<span class=\\"token instruction\\"><span class=\\"token keyword\\">RUN</span> echo <span class=\\"token string\\">\\"deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ jammy main restricted universe multiverse\\"</span> &gt; /etc/apt/sources.list  &amp;&amp; <span class=\\"token operator\\">\\\\</span>\\n    echo <span class=\\"token string\\">\\"deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ jammy-updates main restricted universe multiverse\\"</span> &gt;&gt; /etc/apt/sources.list  &amp;&amp; <span class=\\"token operator\\">\\\\</span>\\n    echo <span class=\\"token string\\">\\"deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ jammy-backports main restricted universe multiverse\\"</span> &gt;&gt; /etc/apt/sources.list  &amp;&amp; <span class=\\"token operator\\">\\\\</span>\\n    echo <span class=\\"token string\\">\\"deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ jammy-security main restricted universe multiverse\\"</span> &gt;&gt; /etc/apt/sources.list &amp;&amp; <span class=\\"token operator\\">\\\\</span>\\n    apt update &amp;&amp; <span class=\\"token operator\\">\\\\</span>\\n    apt upgrade -y &amp;&amp; <span class=\\"token operator\\">\\\\</span>\\n    apt install curl gdebi-core mime-support -y &amp;&amp; <span class=\\"token operator\\">\\\\</span>\\n    curl -o ossfs.deb <span class=\\"token variable\\">$OSSFS_URL</span> &amp;&amp; <span class=\\"token operator\\">\\\\</span>\\n    gdebi -n ossfs.deb &amp;&amp; <span class=\\"token operator\\">\\\\</span>\\n    echo <span class=\\"token variable\\">${OSS_BUCKET}</span>:<span class=\\"token variable\\">${OSS_ACCESS_KEY_ID}</span>:<span class=\\"token variable\\">${OSS_ACCESS_KEY_SECRET}</span> &gt; /etc/passwd-ossfs &amp;&amp; <span class=\\"token operator\\">\\\\</span>\\n    chmod 640 /etc/passwd-ossfs &amp;&amp; <span class=\\"token operator\\">\\\\</span>\\n    mkdir -p /oss/<span class=\\"token variable\\">${OSS_BUCKET}</span> &amp;&amp; <span class=\\"token operator\\">\\\\</span>\\n    rm -rf ossfs.deb &amp;&amp; <span class=\\"token operator\\">\\\\</span>\\n    apt clean</span>\\n\\n<span class=\\"token instruction\\"><span class=\\"token keyword\\">CMD</span> [ <span class=\\"token string\\">\\"python3\\"</span>, <span class=\\"token string\\">\\"-m\\"</span>, <span class=\\"token string\\">\\"http.server\\"</span> ]</span>\\n</code></pre></div>"}');export{h as comp,_ as data};
