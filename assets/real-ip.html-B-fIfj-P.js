import{_ as c}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as t,o as i,c as l,b as n,a,w as o,e as s,d as r}from"./app-B1gzhM40.js";const d={},u=n("h1",{id:"frp-获取真实-ip",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#frp-获取真实-ip"},[n("span",null,"FRP 获取真实 IP")])],-1),k={class:"table-of-contents"},v=r(`<h2 id="1-http-代理" tabindex="-1"><a class="header-anchor" href="#1-http-代理"><span>1. HTTP 代理</span></a></h2><p>使用 HTTP 代理时，可以通过 <code>X-Forwarded-For</code> 头部获取真实 IP。但是由于 HTTP 代理不够灵活，我们一般直接使用 TCP 代理。</p><h2 id="2-tcp-代理" tabindex="-1"><a class="header-anchor" href="#2-tcp-代理"><span>2. TCP 代理</span></a></h2><p>FRP 支持通过 Proxy Protocol 协议来传递经过 FRP 代理的请求的真实 IP，此功能支持所有以 TCP 为底层协议的类型，不支持 UDP。<sup class="footnote-ref"><a href="#footnote1">[1]</a><a class="footnote-anchor" id="footnote-ref1"></a></sup></p><p>通过指定 <code>proxyProtocolVersion</code> 可以开启 Proxy Protocol，下面是配置示例：</p><div class="language-toml line-numbers-mode" data-ext="toml" data-title="toml"><pre class="language-toml"><code><span class="token key property">serverAddr</span>  <span class="token punctuation">=</span> <span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token punctuation">.</span>Envs<span class="token punctuation">.</span>FRP_SERVER_ADDR <span class="token punctuation">}</span><span class="token punctuation">}</span>
<span class="token key property">serverPort</span>  <span class="token punctuation">=</span> <span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token punctuation">.</span>Envs<span class="token punctuation">.</span>FRP_SERVER_PORT <span class="token punctuation">}</span><span class="token punctuation">}</span>
<span class="token key property">token</span>       <span class="token punctuation">=</span> <span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token punctuation">.</span>Envs<span class="token punctuation">.</span>FRP_SERVER_TOKEN <span class="token punctuation">}</span><span class="token punctuation">}</span>

<span class="token punctuation">[</span><span class="token table class-name">app</span><span class="token punctuation">]</span>
<span class="token key property">type</span>        <span class="token punctuation">=</span> <span class="token string">&quot;tcp&quot;</span>
<span class="token key property">remotePort</span>  <span class="token punctuation">=</span> <span class="token number">4090</span>
<span class="token key property">localIp</span>     <span class="token punctuation">=</span> <span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token punctuation">.</span>Envs<span class="token punctuation">.</span>APP_HOST <span class="token punctuation">}</span><span class="token punctuation">}</span>
<span class="token key property">localPort</span>   <span class="token punctuation">=</span> <span class="token number">4090</span>
<span class="token key property">proxyProtocolVersion</span> <span class="token punctuation">=</span> <span class="token string">&quot;v2&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Nginx 支持 Proxy Protocol，可以通过 <code>proxy_protocol</code> 指令来开启。</p><p>在 <code>listen</code> 指令中添加 <code>proxy_protocol</code> 参数，然后在 <code>location</code> 指令中添加 <code>proxy_set_header</code> 指令来设置 <code>X-Real-IP</code> 和 <code>X-Forwarded-For</code> 头部。</p><div class="language-nginx line-numbers-mode" data-ext="nginx" data-title="nginx"><pre class="language-nginx"><code><span class="token directive"><span class="token keyword">http</span></span> <span class="token punctuation">{</span>

    <span class="token comment"># ...</span>

    <span class="token directive"><span class="token keyword">server</span></span> <span class="token punctuation">{</span>
        <span class="token directive"><span class="token keyword">listen</span>      <span class="token number">4090</span> proxy_protocol</span><span class="token punctuation">;</span>
        <span class="token directive"><span class="token keyword">server_name</span> www.demo.com</span><span class="token punctuation">;</span>
        <span class="token directive"><span class="token keyword">client_max_body_size</span> <span class="token number">128m</span></span><span class="token punctuation">;</span>

        <span class="token directive"><span class="token keyword">location</span> /</span> <span class="token punctuation">{</span>
            <span class="token directive"><span class="token keyword">root</span>   /usr/share/nginx/html</span><span class="token punctuation">;</span>
            <span class="token directive"><span class="token keyword">try_files</span> <span class="token variable">$uri</span> <span class="token variable">$uri</span>/ @router</span><span class="token punctuation">;</span>
            <span class="token directive"><span class="token keyword">index</span>  index.html index.htm</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token directive"><span class="token keyword">location</span> @router</span> <span class="token punctuation">{</span>
            <span class="token directive"><span class="token keyword">rewrite</span> ^.*$ /index.html last</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token directive"><span class="token keyword">location</span> ^~ /api/</span> <span class="token punctuation">{</span>
            <span class="token directive"><span class="token keyword">proxy_pass</span>  http://127.0.0.1:8080/</span><span class="token punctuation">;</span>
            <span class="token directive"><span class="token keyword">proxy_set_header</span> Host <span class="token variable">$host</span></span><span class="token punctuation">;</span>
            <span class="token directive"><span class="token keyword">proxy_set_header</span> X-Real-IP <span class="token variable">$proxy_protocol_addr</span></span><span class="token punctuation">;</span>
            <span class="token directive"><span class="token keyword">proxy_set_header</span> X-Forwarded-For <span class="token variable">$proxy_protocol_addr</span></span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="highlight-lines"><br><br><br><br><br><div class="highlight-line"> </div><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><div class="highlight-line"> </div><div class="highlight-line"> </div><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr class="footnotes-sep">`,10),m={class:"footnotes"},h={class:"footnotes-list"},P={id:"footnote1",class:"footnote-item"},b={href:"https://gofrp.org/zh-cn/docs/features/common/realip/",target:"_blank",rel:"noopener noreferrer"},_=n("a",{href:"#footnote-ref1",class:"footnote-backref"},"↩︎",-1);function y(f,T){const e=t("router-link"),p=t("ExternalLinkIcon");return i(),l("div",null,[u,n("nav",k,[n("ul",null,[n("li",null,[a(e,{to:"#1-http-代理"},{default:o(()=>[s("1. HTTP 代理")]),_:1})]),n("li",null,[a(e,{to:"#2-tcp-代理"},{default:o(()=>[s("2. TCP 代理")]),_:1})])])]),v,n("section",m,[n("ol",h,[n("li",P,[n("p",null,[s("获取用户真实 IP，FRP 文档，"),n("a",b,[s("https://gofrp.org/zh-cn/docs/features/common/realip/"),a(p)]),s(),_])])])])])}const F=c(d,[["render",y],["__file","real-ip.html.vue"]]),w=JSON.parse('{"path":"/tools/frp/real-ip.html","title":"FRP 获取真实 IP","lang":"zh-CN","frontmatter":{"description":"FRP 获取真实 IP 1. HTTP 代理 使用 HTTP 代理时，可以通过 X-Forwarded-For 头部获取真实 IP。但是由于 HTTP 代理不够灵活，我们一般直接使用 TCP 代理。 2. TCP 代理 FRP 支持通过 Proxy Protocol 协议来传递经过 FRP 代理的请求的真实 IP，此功能支持所有以 TCP 为底层协议的...","head":[["meta",{"property":"og:url","content":"https://blog.alexsun.top/vuepress-frontend-notes/vuepress-frontend-notes/tools/frp/real-ip.html"}],["meta",{"property":"og:site_name","content":"后端笔记"}],["meta",{"property":"og:title","content":"FRP 获取真实 IP"}],["meta",{"property":"og:description","content":"FRP 获取真实 IP 1. HTTP 代理 使用 HTTP 代理时，可以通过 X-Forwarded-For 头部获取真实 IP。但是由于 HTTP 代理不够灵活，我们一般直接使用 TCP 代理。 2. TCP 代理 FRP 支持通过 Proxy Protocol 协议来传递经过 FRP 代理的请求的真实 IP，此功能支持所有以 TCP 为底层协议的..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-06T13:09:45.000Z"}],["meta",{"property":"article:author","content":"鸭梨"}],["meta",{"property":"article:modified_time","content":"2024-05-06T13:09:45.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"FRP 获取真实 IP\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-05-06T13:09:45.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"鸭梨\\",\\"url\\":\\"https://blog.alexsun.top/\\"}]}"]]},"headers":[{"level":2,"title":"1. HTTP 代理","slug":"1-http-代理","link":"#1-http-代理","children":[]},{"level":2,"title":"2. TCP 代理","slug":"2-tcp-代理","link":"#2-tcp-代理","children":[]}],"git":{"createdTime":1706716591000,"updatedTime":1715000985000,"contributors":[{"name":"Sun-ZhenXing","email":"1006925066@qq.com","commits":1}]},"readingTime":{"minutes":0.84,"words":252},"filePathRelative":"tools/frp/real-ip.md","localizedDate":"2024年1月31日","autoDesc":true,"excerpt":"\\n\\n<h2>1. HTTP 代理</h2>\\n<p>使用 HTTP 代理时，可以通过 <code>X-Forwarded-For</code> 头部获取真实 IP。但是由于 HTTP 代理不够灵活，我们一般直接使用 TCP 代理。</p>\\n<h2>2. TCP 代理</h2>\\n<p>FRP 支持通过 Proxy Protocol 协议来传递经过 FRP 代理的请求的真实 IP，此功能支持所有以 TCP 为底层协议的类型，不支持 UDP。<sup class=\\"footnote-ref\\"><a href=\\"#footnote1\\">[1]</a><a class=\\"footnote-anchor\\" id=\\"footnote-ref1\\"></a></sup></p>"}');export{F as comp,w as data};
