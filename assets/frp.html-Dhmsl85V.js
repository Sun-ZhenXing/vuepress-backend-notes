import{_ as l}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as o,o as u,c as i,b as n,a,w as p,e as s,d as r}from"./app-C0-zUjo9.js";const k={},d=n("h1",{id:"frp-使用指南",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#frp-使用指南"},[n("span",null,"FRP 使用指南")])],-1),m={class:"table-of-contents"},v=n("h2",{id:"1-frp-简介",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#1-frp-简介"},[n("span",null,"1. FRP 简介")])],-1),h={href:"https://github.com/fatedier/frp",target:"_blank",rel:"noopener noreferrer"},b=n("p",null,"FRP 分为客户端和服务端分别称为 frpc 和 frps，客户端用于连接内网的应用程序，服务端用于提供代理服务。",-1),y=n("p",null,"FRP 还提供管理界面，可以通过浏览器访问管理界面，查看代理服务的状态，可以查看每日的流量情况。",-1),f=n("p",null,"大多数情况下我们只需要 TCP 代理即可，HTTP/HTTPS 代理可以支持更多功能，但是需要配置更多参数。",-1),_=n("h2",{id:"2-docker-部署",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#2-docker-部署"},[n("span",null,"2. Docker 部署")])],-1),P={href:"https://hub.docker.com/u/snowdreamtech",target:"_blank",rel:"noopener noreferrer"},g={href:"https://hub.docker.com/r/snowdreamtech/frpc",target:"_blank",rel:"noopener noreferrer"},x={href:"https://hub.docker.com/r/snowdreamtech/frps",target:"_blank",rel:"noopener noreferrer"},R=r(`<p>拉取镜像：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">docker</span> pull snowdreamtech/frpc
<span class="token function">docker</span> pull snowdreamtech/frps
</code></pre></div><p>配置文件内可以使用类似 <code>{{ .Envs.NAME }}</code> 的格式可以读取环境变量。</p><p>下面的示例是将本地的 <code>http://127.0.0.1:4090</code> 映射到公网服务器的 <code>http://xxx.xxx.xxx.xxx:4090</code>。</p><h3 id="21-客户端配置" tabindex="-1"><a class="header-anchor" href="#21-客户端配置"><span>2.1 客户端配置</span></a></h3><p>客户端 frpc 配置文件 <code>frpc.toml</code>：</p><div class="language-toml" data-ext="toml" data-title="toml"><pre class="language-toml"><code><span class="token key property">serverAddr</span>  <span class="token punctuation">=</span> <span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token punctuation">.</span>Envs<span class="token punctuation">.</span>FRP_SERVER_ADDR <span class="token punctuation">}</span><span class="token punctuation">}</span>
<span class="token key property">serverPort</span>  <span class="token punctuation">=</span> <span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token punctuation">.</span>Envs<span class="token punctuation">.</span>FRP_SERVER_PORT <span class="token punctuation">}</span><span class="token punctuation">}</span>
<span class="token key property">token</span>       <span class="token punctuation">=</span> <span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token punctuation">.</span>Envs<span class="token punctuation">.</span>FRP_SERVER_TOKEN <span class="token punctuation">}</span><span class="token punctuation">}</span>

<span class="token punctuation">[</span><span class="token table class-name">app</span><span class="token punctuation">]</span>
<span class="token key property">type</span>        <span class="token punctuation">=</span> <span class="token string">&quot;tcp&quot;</span>
<span class="token key property">remotePort</span>  <span class="token punctuation">=</span> <span class="token number">4090</span>
<span class="token key property">localIp</span>     <span class="token punctuation">=</span> <span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token punctuation">.</span>Envs<span class="token punctuation">.</span>APP_HOST <span class="token punctuation">}</span><span class="token punctuation">}</span>
<span class="token key property">localPort</span>   <span class="token punctuation">=</span> <span class="token number">4090</span>
</code></pre></div><p>Docker Compose 配置文件 <code>docker-compose.yml</code>：</p><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">&quot;3&quot;</span>
<span class="token key atrule">services</span><span class="token punctuation">:</span>
  <span class="token key atrule">frpc</span><span class="token punctuation">:</span>
    <span class="token key atrule">container_name</span><span class="token punctuation">:</span> frpc
    <span class="token key atrule">restart</span><span class="token punctuation">:</span> always
    <span class="token key atrule">image</span><span class="token punctuation">:</span> snowdreamtech/frpc<span class="token punctuation">:</span>0.57.0
    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> /etc/localtime<span class="token punctuation">:</span>/etc/localtime<span class="token punctuation">:</span>ro
      <span class="token punctuation">-</span> /etc/timezone<span class="token punctuation">:</span>/etc/timezone<span class="token punctuation">:</span>ro
      <span class="token punctuation">-</span> ./frpc.toml<span class="token punctuation">:</span>/etc/frp/frpc.toml<span class="token punctuation">:</span>ro
    <span class="token key atrule">network_mode</span><span class="token punctuation">:</span> host
    <span class="token key atrule">environment</span><span class="token punctuation">:</span>
      <span class="token key atrule">FRP_SERVER_ADDR</span><span class="token punctuation">:</span> xxx.xxx.xxx.xxx  <span class="token comment"># 公网服务器地址</span>
      <span class="token key atrule">FRP_SERVER_PORT</span><span class="token punctuation">:</span> <span class="token number">9870</span>             <span class="token comment"># 服务隧道端口</span>
      <span class="token key atrule">FRP_SERVER_TOKEN</span><span class="token punctuation">:</span> xxxxxx          <span class="token comment"># 服务隧道密码</span>
      <span class="token key atrule">APP_HOST</span><span class="token punctuation">:</span> 127.0.0.1               <span class="token comment"># 本地程序地址</span>
    <span class="token key atrule">logging</span><span class="token punctuation">:</span>
      <span class="token key atrule">driver</span><span class="token punctuation">:</span> <span class="token string">&quot;json-file&quot;</span>
      <span class="token key atrule">options</span><span class="token punctuation">:</span>
        <span class="token key atrule">max-size</span><span class="token punctuation">:</span> <span class="token string">&quot;1m&quot;</span>
<span class="token key atrule">networks</span><span class="token punctuation">:</span>
  <span class="token key atrule">host</span><span class="token punctuation">:</span>
    <span class="token key atrule">name</span><span class="token punctuation">:</span> host
    <span class="token key atrule">external</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>此处直接使用 <code>host</code> 网络用于读取宿主机的应用程序，也可以使用自定义网络来通信。</p><p>启动客户端：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">docker-compose</span> up <span class="token parameter variable">-d</span>
</code></pre></div><p>关闭客户端：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">docker-compose</span> down
</code></pre></div><h3 id="22-服务端配置" tabindex="-1"><a class="header-anchor" href="#22-服务端配置"><span>2.2 服务端配置</span></a></h3><p>服务端 frps 配置文件 <code>frps.toml</code>：</p><div class="language-toml" data-ext="toml" data-title="toml"><pre class="language-toml"><code><span class="token key property">bindPort</span>        <span class="token punctuation">=</span> <span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token punctuation">.</span>Envs<span class="token punctuation">.</span>FRP_SERVER_PORT <span class="token punctuation">}</span><span class="token punctuation">}</span>
<span class="token key property">token</span>           <span class="token punctuation">=</span> <span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token punctuation">.</span>Envs<span class="token punctuation">.</span>FRP_SERVER_TOKEN <span class="token punctuation">}</span><span class="token punctuation">}</span>

<span class="token key property">dashboardAddr</span>   <span class="token punctuation">=</span> <span class="token string">&quot;0.0.0.0&quot;</span>
<span class="token key property">dashboardPort</span>   <span class="token punctuation">=</span> <span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token punctuation">.</span>Envs<span class="token punctuation">.</span>FRP_ADMIN_PORT <span class="token punctuation">}</span><span class="token punctuation">}</span>
<span class="token key property">dashboardUser</span>   <span class="token punctuation">=</span> <span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token punctuation">.</span>Envs<span class="token punctuation">.</span>FRP_ADMIN_USER <span class="token punctuation">}</span><span class="token punctuation">}</span>
<span class="token key property">dashboardPwd</span>    <span class="token punctuation">=</span> <span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token punctuation">.</span>Envs<span class="token punctuation">.</span>FRP_ADMIN_PASS <span class="token punctuation">}</span><span class="token punctuation">}</span>
</code></pre></div><p>注意下面开放的三个端口：</p><ul><li><code>9870</code>：服务隧道端口，用于提供代理服务</li><li><code>7890</code>：管理界面</li><li><code>4090</code>：用于客户端连接的端口</li></ul><p>将下面的 <code>docker-compose.yml</code> 文件保存在不同位置。</p><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">&quot;3&quot;</span>
<span class="token key atrule">services</span><span class="token punctuation">:</span>
  <span class="token key atrule">frps</span><span class="token punctuation">:</span>
    <span class="token key atrule">restart</span><span class="token punctuation">:</span> always
    <span class="token key atrule">container_name</span><span class="token punctuation">:</span> frps
    <span class="token key atrule">image</span><span class="token punctuation">:</span> snowdreamtech/frps<span class="token punctuation">:</span>0.57.0
    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> /etc/localtime<span class="token punctuation">:</span>/etc/localtime<span class="token punctuation">:</span>ro
      <span class="token punctuation">-</span> /etc/timezone<span class="token punctuation">:</span>/etc/timezone<span class="token punctuation">:</span>ro
      <span class="token punctuation">-</span> ./frps.toml<span class="token punctuation">:</span>/etc/frp/frps.toml
    <span class="token key atrule">ports</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> 9870<span class="token punctuation">:</span><span class="token number">9870</span>
      <span class="token punctuation">-</span> 7890<span class="token punctuation">:</span><span class="token number">7890</span>
      <span class="token punctuation">-</span> 4090<span class="token punctuation">:</span><span class="token number">4090</span>
    <span class="token key atrule">environment</span><span class="token punctuation">:</span>
      <span class="token key atrule">FRP_SERVER_PORT</span><span class="token punctuation">:</span> <span class="token number">9870</span>     <span class="token comment"># 服务隧道端口</span>
      <span class="token key atrule">FRP_SERVER_TOKEN</span><span class="token punctuation">:</span> xxxxxx  <span class="token comment"># 服务隧道密码</span>
      <span class="token key atrule">FRP_ADMIN_PORT</span><span class="token punctuation">:</span> <span class="token number">7890</span>      <span class="token comment"># 管理界面端口</span>
      <span class="token key atrule">FRP_ADMIN_USER</span><span class="token punctuation">:</span> username  <span class="token comment"># 管理界面用户名</span>
      <span class="token key atrule">FRP_ADMIN_PASS</span><span class="token punctuation">:</span> password  <span class="token comment"># 管理界面密码</span>
    <span class="token key atrule">networks</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> frps
    <span class="token key atrule">logging</span><span class="token punctuation">:</span>
        <span class="token key atrule">driver</span><span class="token punctuation">:</span> <span class="token string">&quot;json-file&quot;</span>
        <span class="token key atrule">options</span><span class="token punctuation">:</span>
          <span class="token key atrule">max-size</span><span class="token punctuation">:</span> <span class="token string">&quot;1m&quot;</span>
<span class="token key atrule">networks</span><span class="token punctuation">:</span>
  <span class="token key atrule">frps</span><span class="token punctuation">:</span>
    <span class="token key atrule">external</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>启动服务端：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">docker</span> network create frps
<span class="token function">docker-compose</span> up <span class="token parameter variable">-d</span>
</code></pre></div>`,23);function E(T,F){const t=o("router-link"),e=o("ExternalLinkIcon"),c=o("Mermaid");return u(),i("div",null,[d,n("nav",m,[n("ul",null,[n("li",null,[a(t,{to:"#1-frp-简介"},{default:p(()=>[s("1. FRP 简介")]),_:1})]),n("li",null,[a(t,{to:"#2-docker-部署"},{default:p(()=>[s("2. Docker 部署")]),_:1}),n("ul",null,[n("li",null,[a(t,{to:"#21-客户端配置"},{default:p(()=>[s("2.1 客户端配置")]),_:1})]),n("li",null,[a(t,{to:"#22-服务端配置"},{default:p(()=>[s("2.2 服务端配置")]),_:1})])])])])]),v,n("p",null,[s("FRP 是一个由 Go 编写的高性能的反向代理应用，支持 TCP、UDP、HTTP、HTTPS 等协议。它可以轻松地进行内网穿透，对外网提供服务。其 GitHub 仓库为 "),n("a",h,[s("fatedier/frp"),a(e)]),s("。")]),b,a(c,{id:"mermaid-15",code:"eJx1j70OgjAUhXee4o46kEBZiIOjiYkxxp+JMECtQmygaaksPLy3thbUMDX5Tm6/c+6yEBXsjgHAicknk9lNCgV93VUgdMlrCttDjulFMRkvMo0PxPnSEeII8SRxJPEkhjBcu98/Z/8o+UZKl65aSwsOe9b1rXxAjJFtWlOGdbhJq1Z1qzRKo7cSYCMFxQyH0CnxAnOKmDXXeRGZinDlKCJ2q/0Ukx/NOM0ceo0dZrLhrJuG8cGWmo9I8AKmynxe"}),y,f,_,n("p",null,[s("比较流行的 FRP 镜像是由 "),n("a",P,[s("@snowdreamtech"),a(e)]),s(" 提供的，包括 "),n("a",g,[s("frpc"),a(e)]),s(" 和 "),n("a",x,[s("frps"),a(e)]),s(" 两个镜像。")]),R])}const w=l(k,[["render",E],["__file","frp.html.vue"]]),q=JSON.parse('{"path":"/tools/frp/frp.html","title":"FRP 使用指南","lang":"zh-CN","frontmatter":{"description":"FRP 使用指南 1. FRP 简介 FRP 是一个由 Go 编写的高性能的反向代理应用，支持 TCP、UDP、HTTP、HTTPS 等协议。它可以轻松地进行内网穿透，对外网提供服务。其 GitHub 仓库为 fatedier/frp。 FRP 分为客户端和服务端分别称为 frpc 和 frps，客户端用于连接内网的应用程序，服务端用于提供代理服务。 ...","head":[["meta",{"property":"og:url","content":"https://blog.alexsun.top/vuepress-backend-notes/vuepress-backend-notes/tools/frp/frp.html"}],["meta",{"property":"og:site_name","content":"后端笔记"}],["meta",{"property":"og:title","content":"FRP 使用指南"}],["meta",{"property":"og:description","content":"FRP 使用指南 1. FRP 简介 FRP 是一个由 Go 编写的高性能的反向代理应用，支持 TCP、UDP、HTTP、HTTPS 等协议。它可以轻松地进行内网穿透，对外网提供服务。其 GitHub 仓库为 fatedier/frp。 FRP 分为客户端和服务端分别称为 frpc 和 frps，客户端用于连接内网的应用程序，服务端用于提供代理服务。 ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-06T13:09:45.000Z"}],["meta",{"property":"article:author","content":"鸭梨"}],["meta",{"property":"article:modified_time","content":"2024-05-06T13:09:45.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"FRP 使用指南\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-05-06T13:09:45.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"鸭梨\\",\\"url\\":\\"https://blog.alexsun.top/\\"}]}"]]},"headers":[{"level":2,"title":"1. FRP 简介","slug":"1-frp-简介","link":"#1-frp-简介","children":[]},{"level":2,"title":"2. Docker 部署","slug":"2-docker-部署","link":"#2-docker-部署","children":[{"level":3,"title":"2.1 客户端配置","slug":"21-客户端配置","link":"#21-客户端配置","children":[]},{"level":3,"title":"2.2 服务端配置","slug":"22-服务端配置","link":"#22-服务端配置","children":[]}]}],"git":{"createdTime":1706716591000,"updatedTime":1715000985000,"contributors":[{"name":"Sun-ZhenXing","email":"1006925066@qq.com","commits":1}]},"readingTime":{"minutes":2.26,"words":677},"filePathRelative":"tools/frp/frp.md","localizedDate":"2024年1月31日","autoDesc":true,"excerpt":"\\n\\n<h2>1. FRP 简介</h2>\\n<p>FRP 是一个由 Go 编写的高性能的反向代理应用，支持 TCP、UDP、HTTP、HTTPS 等协议。它可以轻松地进行内网穿透，对外网提供服务。其 GitHub 仓库为 <a href=\\"https://github.com/fatedier/frp\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">fatedier/frp</a>。</p>\\n<p>FRP 分为客户端和服务端分别称为 frpc 和 frps，客户端用于连接内网的应用程序，服务端用于提供代理服务。</p>\\n<p>FRP 还提供管理界面，可以通过浏览器访问管理界面，查看代理服务的状态，可以查看每日的流量情况。</p>"}');export{w as comp,q as data};
