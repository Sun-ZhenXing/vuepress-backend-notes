import{_ as p,r as e,o as c,c as r,b as l,a,w as s,d as i,e as o}from"./app-ju10JTa9.js";const d={},D=l("h1",{id:"1-java-语言概述",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#1-java-语言概述"},[l("span",null,"1. Java 语言概述")])],-1),u={class:"table-of-contents"},h=o('<h2 id="11-历史" tabindex="-1"><a class="header-anchor" href="#11-历史"><span>1.1 历史</span></a></h2><p>在 1972 年，C 语言就诞生了，但直到 1995 年 Java 才问世，我们先说说 C 语言的一些特点：</p><ol><li>贴近硬件，运行极快，效率极高</li><li>应用于操作系统、编译器、数据库和网络系统等</li><li>使用指针和手动内存管理</li></ol><p>1982 年 C++ 诞生：</p><ol><li>面向对象</li><li>兼容 C 语言</li><li>通用编程语言</li><li>多应用于图形领域、游戏等</li></ol><p>由于 C++ 的一些特征晦涩难懂，严重依赖平台和编译器实现，因此我们迫切需要一门语言：</p><ul><li>语法像 C</li><li>没有指针</li><li>自动内存管理</li><li>真正编写一次，到处运行</li><li>面向对象</li><li>类型安全</li><li>拥有高质量的类库</li></ul><p>1995 年的网页简单而粗糙，Java 的 Applet 带来了生机。于是 Java 成为了那个时代最好的语言，并持续流行了 30 年：</p><ul><li>Java 2 SE：桌面</li><li>Java 2 ME：移动端</li><li>Java 2 EE：服务器</li></ul><p>许多基于 Java 的平台和中间件、工具：</p><ul><li>构建工具：Ant、Maven、Jekins</li><li>服务器：Tomcat、Jetty、Jboss、Websphere、weblogic</li><li>Web 开发：Structs、Spring、Hibernate、MyBatis</li><li>开发工具：Eclipse、NetBeans、Intellij Idea、Jbuilder</li></ul><p>有一些应用服务器展示了网络开发的标准：</p><ul><li>高性能</li><li>高可用</li><li>高并发</li></ul><p>跨时代的作品：</p><ul><li>Hadoop，2006</li><li>Android，2008</li></ul><h2 id="12-语言特性" tabindex="-1"><a class="header-anchor" href="#12-语言特性"><span>1.2 语言特性</span></a></h2><p>Java 的特性和优势：</p><ul><li>简单性</li><li>面向对象</li><li>可移植性</li><li>高性能</li><li>分布式</li><li>动态性</li><li>多线程</li><li>安全性</li><li>健壮性</li></ul><h2 id="13-发行版本" tabindex="-1"><a class="header-anchor" href="#13-发行版本"><span>1.3 发行版本</span></a></h2><p>几个概念：</p><ul><li>JDK：Java Development Kit</li><li>JRE：Java Runtime Environment</li><li>JVM：Java Virtual Machine</li></ul><p>Java 语言：</p><ul><li>Java 语言</li><li>工具和 APIs <ul><li>java</li><li>javac</li><li>javadoc</li><li>apt</li><li>jar</li><li>javap</li><li>JPDA</li><li>JConsole</li><li>Java VisualVM</li><li>Security</li><li>Int&#39;I</li><li>RMI</li><li>IDL</li><li>Deploy</li><li>Monitoring</li><li>Troubleshoot</li><li>Scripting</li><li>JVM TI</li></ul></li><li>RIAs <ul><li>Java Web Start</li><li>Applet / Java Plug-in</li></ul></li><li>用户界面工具包 <ul><li>AWT <ul><li>Accessibility</li><li>Drag n Drop</li></ul></li><li>Swing <ul><li>Input Methods</li><li>Image I/O</li></ul></li><li>Java 2D <ul><li>Print Service</li><li>Sound</li></ul></li></ul></li><li>集成库 <ul><li>IDL</li><li>JDBC</li><li>JNDI</li><li>RMI</li><li>RMI-IIOP</li><li>Scripting</li></ul></li><li>其他基准库 <ul><li>Beans</li><li>Intl Support</li><li>I/O</li><li>JMX</li><li>JNI</li><li>Math</li><li>Networking</li><li>Override Mechanism</li><li>Security</li><li>Serialization</li><li>Extension Mechanism</li><li>XML JAXP</li></ul></li><li>语言和工具标准库 <ul><li>lang &amp; util</li><li>Collections</li><li>Concurrency Utilities</li><li>Jar</li><li>Logging</li><li>Management</li><li>Preferences API</li><li>Ref Objects</li><li>Reflection</li><li>Regular Expression</li><li>Versioning</li><li>Zip</li><li>Instrumentation</li></ul></li><li>JVM <ul><li>Java Hotspot Client ans Server VM</li></ul></li></ul>',23),y=o(`<h2 id="14-安装开发环境" tabindex="-1"><a class="header-anchor" href="#14-安装开发环境"><span>1.4 安装开发环境</span></a></h2><p>这里使用的环境为：</p><ul><li>Java 1.8+</li><li>IntelliJ IDEA</li></ul><p>我们可以测试 <code>Hello.java</code> 是否能正常运行：</p><div class="language-java" data-ext="java" data-title="java"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#569CD6;">public</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">class</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">Hello</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#569CD6;">public</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">static</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">void</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">main</span><span style="color:#D4D4D4;">(</span><span style="color:#4EC9B0;">String</span><span style="color:#D4D4D4;">[] </span><span style="color:#9CDCFE;">args</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#9CDCFE;">System</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">out</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">println</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;Hello World!&quot;</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre></div><p>在命令行编译并运行：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;">javac</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">Hello.java</span></span>
<span class="line"><span style="color:#DCDCAA;">java</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">Hello</span></span>
<span class="line"></span></code></pre></div><h2 id="15-编码习惯" tabindex="-1"><a class="header-anchor" href="#15-编码习惯"><span>1.5 编码习惯</span></a></h2><p>变量方法、类名可遵循驼峰命名。</p><p>好的程序需要善于使用各种注释，Java 注释有下面几种：</p><ul><li>单行注释（<code>// ...</code>）</li><li>多行注释（<code>/* ... */</code>）</li><li>文档注释（<code>/** ... @xxx ... */</code>）</li></ul><p>JDK 7 的数字支持下划线分割：</p><div class="language-java" data-ext="java" data-title="java"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#4EC9B0;">int</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">money</span><span style="color:#D4D4D4;"> = </span><span style="color:#B5CEA8;">10_000_000</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"></span></code></pre></div><p>常见的文档注释内容：</p><table><thead><tr><th>表示</th><th>含义</th></tr></thead><tbody><tr><td><code>@Description</code></td><td>描述</td></tr><tr><td><code>@Author</code></td><td>作者</td></tr></tbody></table>`,15);function v(C,J){const n=e("router-link"),t=e("Badge");return c(),r("div",null,[D,l("nav",u,[l("ul",null,[l("li",null,[a(n,{to:"#11-历史"},{default:s(()=>[i("1.1 历史")]),_:1})]),l("li",null,[a(n,{to:"#12-语言特性"},{default:s(()=>[i("1.2 语言特性")]),_:1})]),l("li",null,[a(n,{to:"#13-发行版本"},{default:s(()=>[i("1.3 发行版本")]),_:1})]),l("li",null,[a(n,{to:"#14-安装开发环境"},{default:s(()=>[i("1.4 安装开发环境")]),_:1})]),l("li",null,[a(n,{to:"#15-编码习惯"},{default:s(()=>[i("1.5 编码习惯")]),_:1})])])]),h,l("p",null,[a(t,{type:"danger"},{default:s(()=>[i("TODO")]),_:1}),i(" 插入图片")]),y])}const E=p(d,[["render",v],["__file","index.html.vue"]]);export{E as default};
